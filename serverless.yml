

service: zombie-service


#    ██████╗██╗   ██╗███████╗████████╗ ██████╗ ███╗   ███╗
#   ██╔════╝██║   ██║██╔════╝╚══██╔══╝██╔═══██╗████╗ ████║
#   ██║     ██║   ██║███████╗   ██║   ██║   ██║██╔████╔██║
#   ██║     ██║   ██║╚════██║   ██║   ██║   ██║██║╚██╔╝██║
#   ╚██████╗╚██████╔╝███████║   ██║   ╚██████╔╝██║ ╚═╝ ██║
#    ╚═════╝ ╚═════╝ ╚══════╝   ╚═╝    ╚═════╝ ╚═╝     ╚═╝

custom:
  accountId: { Ref: AWS::AccountId }
  stage: ${opt:stage, self:provider.stage}
  DynamoCapacityList: zombie-${self:custom.stage}-list
  DynamoCapacity: ${file(config/${self:custom.stage}.yml):custom.DynamoCapacity}
  DynamoCapacityJobs: zombie-${self:custom.stage}-equipment
  NBPCurrencyUrl: ${file(config/${self:custom.stage}.yml):custom.NBPCurrencyUrl}
  ZombieMarketUrl: ${file(config/${self:custom.stage}.yml):custom.ZombieMarketPricesUrl}
  custom:
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

#   ██████╗ ██████╗  ██████╗ ██╗   ██╗██╗██████╗ ███████╗██████╗
#   ██╔══██╗██╔══██╗██╔═══██╗██║   ██║██║██╔══██╗██╔════╝██╔══██╗
#   ██████╔╝██████╔╝██║   ██║██║   ██║██║██║  ██║█████╗  ██████╔╝
#   ██╔═══╝ ██╔══██╗██║   ██║╚██╗ ██╔╝██║██║  ██║██╔══╝  ██╔══██╗
#   ██║     ██║  ██║╚██████╔╝ ╚████╔╝ ██║██████╔╝███████╗██║  ██║
#   ╚═╝     ╚═╝  ╚═╝ ╚═════╝   ╚═══╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝


provider:
  name: aws
  runtime: nodejs8.10
  region: ${file(config/${self:custom.stage}.yml):custom.region}
  environment:
    SLS_STAGE: ${self:custom.stage}
    ZOMBIE_TABLE: {Ref: ZombieList}
    ITEM_TABLE: {Ref: ItemList}
    NBP_URL: ${self:custom.NBPCurrencyUrl}
    MARKET_URL: ${self:custom.ZombieMarketUrl}
    MY_REGION: ${opt:region, self:provider.region}
    LOG_LEVEL: ${file(config/${self:custom.stage}.yml):provider.environment.LOG_LEVEL}



# ██████╗  ██████╗ ██╗     ███████╗███████╗
# ██╔══██╗██╔═══██╗██║     ██╔════╝██╔════╝
# ██████╔╝██║   ██║██║     █████╗  ███████╗
# ██╔══██╗██║   ██║██║     ██╔══╝  ╚════██║
# ██║  ██║╚██████╔╝███████╗███████╗███████║
# ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝╚══════╝
                                         

  iamRoleStatements:
    - Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ ZombieList, Arn ]
  
      Effect: Allow
    - Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
        - "Fn::GetAtt": [ ItemList, Arn ]
  
      Effect: Allow


# ███████╗██╗   ██╗███╗   ██╗ ██████╗████████╗██╗ ██████╗ ███╗   ██╗███████╗
# ██╔════╝██║   ██║████╗  ██║██╔════╝╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝
# █████╗  ██║   ██║██╔██╗ ██║██║        ██║   ██║██║   ██║██╔██╗ ██║███████╗
# ██╔══╝  ██║   ██║██║╚██╗██║██║        ██║   ██║██║   ██║██║╚██╗██║╚════██║
# ██║     ╚██████╔╝██║ ╚████║╚██████╗   ██║   ██║╚██████╔╝██║ ╚████║███████║
# ╚═╝      ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝
                                                                          

functions:

  fetchCurrentMarketPrices:
    handler: functions/getMarketPrices.handler
    memorySize: 128
    timeout: 300 # optional, in seconds, default is 6
    events:
      - schedule: cron(0 12 * * ? *)
    
  createZombie:
    handler: functions/createZombie.handler
    memorySize: 128
    timeout: 30 # optional, in seconds, default is 6
    events:
      - http:
          method: post
          path: zombie
          cors: true
          integration: lambda

  removeZombie:
    handler: functions/removeZombie.handler
    memorySize: 128
    timeout: 30 # optional, in seconds, default is 6
    events:
      - http:
          method: delete
          path: zombie/{zombieId}
          cors: true
          integration: lambda

  addEquipment:
    handler: functions/addEquipment.handler
    memorySize: 128
    timeout: 30 # optional, in seconds, default is 6
    events:
      - http:
          method: post
          path: zombie/eq
          cors: true
          integration: lambda

  removeEquipment:
    handler: functions/removeItemFromEquipment.handler
    memorySize: 128
    timeout: 30 # optional, in seconds, default is 6
    events:
      - http:
          method: put
          path: zombie/eq
          cors: true
          integration: lambda
 
  getZombie:
    handler: functions/getZombieData.handler
    memorySize: 128
    timeout: 30 # optional, in seconds, default is 6
    events:
      - http:
          method: get
          path: zombie/{zombieId}
          cors: true
          integration: lambda
          


# ██████╗ ███████╗███████╗ ██████╗ ██╗   ██╗██████╗  ██████╗███████╗███████╗
# ██╔══██╗██╔════╝██╔════╝██╔═══██╗██║   ██║██╔══██╗██╔════╝██╔════╝██╔════╝
# ██████╔╝█████╗  ███████╗██║   ██║██║   ██║██████╔╝██║     █████╗  ███████╗
# ██╔══██╗██╔══╝  ╚════██║██║   ██║██║   ██║██╔══██╗██║     ██╔══╝  ╚════██║
# ██║  ██║███████╗███████║╚██████╔╝╚██████╔╝██║  ██║╚██████╗███████╗███████║
# ╚═╝  ╚═╝╚══════╝╚══════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚══════╝╚══════╝
                                                                          


resources:
  Resources:
    ItemList:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
          - AttributeName: itemname
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput: ${self:custom.DynamoCapacity}
        GlobalSecondaryIndexes:
        - IndexName: myGSI
          KeySchema:
          - AttributeName: itemname
            KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput: ${self:custom.DynamoCapacity}
    ZombieList:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: zombiename
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput: ${self:custom.DynamoCapacity}
        GlobalSecondaryIndexes:
        - IndexName: myGSI
          KeySchema:
          - AttributeName: zombiename
            KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput: ${self:custom.DynamoCapacity}



#   ██████╗ ██╗     ██╗   ██╗ ██████╗ ██╗███╗   ██╗███████╗
#   ██╔══██╗██║     ██║   ██║██╔════╝ ██║████╗  ██║██╔════╝
#   ██████╔╝██║     ██║   ██║██║  ███╗██║██╔██╗ ██║███████╗
#   ██╔═══╝ ██║     ██║   ██║██║   ██║██║██║╚██╗██║╚════██║
#   ██║     ███████╗╚██████╔╝╚██████╔╝██║██║ ╚████║███████║
#   ╚═╝     ╚══════╝ ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═══╝╚══════╝

plugins:
  - serverless-plugin-include-dependencies
  - serverless-plugin-custom-roles
  - serverless-plugin-existing-s3
  - serverless-offline
  - serverless-dynamodb-local

#   ██████╗  █████╗  ██████╗██╗  ██╗ █████╗  ██████╗ ███████╗
#   ██╔══██╗██╔══██╗██╔════╝██║ ██╔╝██╔══██╗██╔════╝ ██╔════╝
#   ██████╔╝███████║██║     █████╔╝ ███████║██║  ███╗█████╗
#   ██╔═══╝ ██╔══██║██║     ██╔═██╗ ██╔══██║██║   ██║██╔══╝
#   ██║     ██║  ██║╚██████╗██║  ██╗██║  ██║╚██████╔╝███████╗
#   ╚═╝     ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝

package:
  individually: true